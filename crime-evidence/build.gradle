plugins {
    id "java"
    id "jacoco"
    id "org.springframework.boot" version "3.5.0"
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.sonarqube" version "6.2.0.5505"
    id "info.solidsoft.pitest" version "1.15.0"
}

group = "uk.gov.justice.laa.crime"

jacoco {
    toolVersion = "0.8.8"
}

def versions = [
        sentry                : "8.14.0",
        crimeCommonsClasses   : "4.10.0",
        commonsModSchemas     : "1.32.0",
        springdoc             : "2.8.6",
        resilience4j          : "2.3.0",
        wiremock              : "3.10.0"
]

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
    maven {
        url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {

    implementation platform("io.sentry:sentry-bom:${versions.sentry}")
    implementation("io.sentry:sentry-spring-boot-starter-jakarta")
    implementation("io.sentry:sentry-logback")

    implementation "uk.gov.justice.service.laa-crime:crime-commons-classes:$versions.crimeCommonsClasses"
    implementation "uk.gov.justice.service.laa-crime:crime-commons-mod-schemas:$versions.commonsModSchemas"

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    implementation "io.github.resilience4j:resilience4j-reactor:$versions.resilience4j"
    implementation "io.github.resilience4j:resilience4j-spring-boot3:$versions.resilience4j"

    implementation "org.postgresql:postgresql"
    implementation "org.liquibase:liquibase-core"

    implementation "io.micrometer:micrometer-tracing"
    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "io.micrometer:micrometer-tracing-bridge-brave"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springdoc"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation "com.h2database:h2"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.wiremock.integrations:wiremock-spring-boot:$versions.wiremock"

    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
}

configurations {
    configureEach {
        exclude group: 'junit', module: 'junit'
    }
}

test {
    useJUnitPlatform()
    dependsOn "cleanTest"
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    onlyIf = { true }
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["**/entity/**",
                              "**/dto/**",
                              "**/config/**"])
        }))
    }
}

pitest {
    targetClasses = ["uk.gov.justice.laa.crime.evidence.*",
                     "uk.gov.justice.laa.crime.evidence.controller.*",
                     "uk.gov.justice.laa.crime.evidence.validation.*"
    ]
    excludedClasses = ["uk.gov.justice.laa.crime.evidence.dto.*",
                       "uk.gov.justice.laa.crime.evidence.mapper.*",
                       "uk.gov.justice.laa.crime.evidence.CrimeEvidenceApplication"
    ]
    threads = 5
    outputFormats = ["XML", "HTML"]
    timestampedReports = false
    mutationThreshold = 60
}


def isCiBuild = System.getenv("SONAR_TOKEN") != null

if (isCiBuild) {
    tasks.named("sonar") {
        dependsOn "test"
    }
}

sonar {
    skipProject = !isCiBuild
    properties {
        property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java,**/handler/**.java"
        property "sonar.coverage.exclusions", "**/CrimeEvidenceApplication.java"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.projectKey", "ministryofjustice_laa-crime-evidence"
        property "sonar.organization", "ministryofjustice"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectName", "Crime Apps :: crime-evidence"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}